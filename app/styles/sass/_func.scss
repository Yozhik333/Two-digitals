// Functions

@function strip-unit($number) {
	@if type-of($number) == "number" and not unitless($number) {
		@return math.div($number, ($number * 0 + 1));
	}

	@return $number;
}

@function fs($f-min, $f-max, $w-min, $w-max, $units: px) {
	$f-min: strip-unit($f-min);
	$f-max: strip-unit($f-max);
	$w-min: strip-unit($w-min);
	$w-max: strip-unit($w-max);

	$k: math.div(($f-max - $f-min), ($w-max - $w-min));
	$b: $f-min - $k * $w-min;

	$b: $b + $units;

	@return calc(#{$k} * 100vw + #{$b});
}

// миксин для отзывчивых размеров, нужно создать разных отступов
@mixin fluidFontSize($f-min, $f-max, $w-min, $w-max, $fallback: false) {
	font-size: $f-min;

	@media (min-width: $w-min) {
		@if ($fallback) {
			font-size: $fallback;
		}
		font-size: fs($f-min, $f-max, $w-min, $w-max, px);
	}
	@media (min-width: $w-max) {
		font-size: $f-max;
	}
}

@mixin paddingLeft($f-min, $f-max, $w-min, $w-max, $fallback: false) {
	padding-left: $f-min;

	@media (min-width: $w-min) {
		@if ($fallback) {
			padding-left: $fallback;
		}
		padding-left: fs($f-min, $f-max, $w-min, $w-max, px);
	}
	@media (min-width: $w-max) {
		padding-left: $f-max;
	}
}
@mixin paddingRight($f-min, $f-max, $w-min, $w-max, $fallback: false) {
	padding-right: $f-min;

	@media (min-width: $w-min) {
		@if ($fallback) {
			padding-right: $fallback;
		}
		padding-right: fs($f-min, $f-max, $w-min, $w-max, px);
	}
	@media (min-width: $w-max) {
		padding-right: $f-max;
	}
}
@mixin paddingTop($f-min, $f-max, $w-min, $w-max, $fallback: false) {
	padding-top: $f-min;

	@media (min-width: $w-min) {
		@if ($fallback) {
			padding-top: $fallback;
		}
		padding-top: fs($f-min, $f-max, $w-min, $w-max, px);
	}
	@media (min-width: $w-max) {
		padding-top: $f-max;
	}
}
@mixin paddingBottom($f-min, $f-max, $w-min, $w-max, $fallback: false) {
	padding-bottom: $f-min;

	@media (min-width: $w-min) {
		@if ($fallback) {
			padding-bottom: $fallback;
		}
		padding-bottom: fs($f-min, $f-max, $w-min, $w-max, px);
	}
	@media (min-width: $w-max) {
		padding-bottom: $f-max;
	}
}
